/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */







declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  AboutArticleInput: { // input type
    content?: string | null; // String
    icon?: string | null; // String
    id?: string | null; // ID
    label?: string | null; // String
    sectionId?: string | null; // ID
  }
  AboutPageInput: { // input type
    summary?: string | null; // String
    title?: string | null; // String
  }
  AboutSectionInput: { // input type
    id?: string | null; // ID
    name?: string | null; // String
  }
  AddGroupSkillInput: { // input type
    groups: string[]; // [ID!]!
    label: string; // String!
    score: number; // Int!
  }
  EducationInput: { // input type
    campus: string; // String!
    course: string; // String!
    duration: string; // String!
    endDate: string; // String!
    gpa: string; // String!
    institute: string; // String!
    level: string; // String!
    startDate: string; // String!
  }
  LoginInput: { // input type
    email: string; // String!
    password: string; // String!
  }
  PageInput: { // input type
    name: string; // String!
    summary?: string | null; // String
    title?: string | null; // String
  }
  ProjectInput: { // input type
    deployed: string; // String!
    desc: string; // String!
    github: string; // String!
    images: string[]; // [String!]!
    label?: string | null; // String
    skills: string[]; // [String!]!
  }
  SkillGroupInput: { // input type
    name: string; // String!
  }
  SummariesInput: { // input type
    about?: string | null; // String
    education?: string | null; // String
    projects?: string | null; // String
    resume?: string | null; // String
    skills?: string | null; // String
    work?: string | null; // String
  }
  UpdateEducationInput: { // input type
    campus?: string | null; // String
    course?: string | null; // String
    duration?: string | null; // String
    endDate?: string | null; // String
    gpa?: string | null; // String
    institute?: string | null; // String
    level?: string | null; // String
    startDate?: string | null; // String
  }
  UpdateGroupSkillInput: { // input type
    groups: string[]; // [ID!]!
    label: string; // String!
    score: number; // Int!
  }
  UpdateProjectInput: { // input type
    deployed?: string | null; // String
    desc?: string | null; // String
    github?: string | null; // String
    images?: string[] | null; // [String!]
    label?: string | null; // String
    skills?: string[] | null; // [String!]
  }
  UpdateUserInput: { // input type
    about?: string | null; // String
    address?: string | null; // String
    confirmPassword?: string | null; // String
    email?: string | null; // String
    facebook?: string | null; // String
    github?: string | null; // String
    linkedin?: string | null; // String
    name?: string | null; // String
    password?: string | null; // String
    phone?: string | null; // String
    picture?: string | null; // String
    resume?: string | null; // String
  }
  UpdateWorkInput: { // input type
    address?: string | null; // String
    company?: string | null; // String
    duration?: string | null; // String
    duties?: string[] | null; // [String!]
    icon?: string | null; // String
    role?: string | null; // String
    type?: string | null; // String
  }
  UserInput: { // input type
    about: string; // String!
    address: string; // String!
    confirmPassword: string; // String!
    email: string; // String!
    facebook: string; // String!
    github: string; // String!
    linkedin: string; // String!
    name: string; // String!
    password: string; // String!
    phone: string; // String!
    picture: string; // String!
    resume: string; // String!
  }
  WorkInput: { // input type
    address: string; // String!
    company: string; // String!
    duration: string; // String!
    duties: string[]; // [String!]!
    icon?: string | null; // String
    role: string; // String!
    type: string; // String!
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  AboutArticle: { // root type
    content: string; // String!
    icon: string; // String!
    id: string; // ID!
    label: string; // String!
    sectionId: string; // ID!
  }
  AboutArticleResponse: { // root type
    article?: NexusGenRootTypes['AboutArticle'] | null; // AboutArticle
    success?: boolean | null; // Boolean
  }
  AboutPage: { // root type
    id: string; // ID!
    name: string; // String!
    summary?: string | null; // String
    title?: string | null; // String
    userId: string; // ID!
  }
  AboutSection: { // root type
    id: string; // ID!
    name: string; // String!
  }
  AboutSectionResponse: { // root type
    section?: NexusGenRootTypes['AboutSection'] | null; // AboutSection
    success?: boolean | null; // Boolean
  }
  DeleteUserResponse: { // root type
    deletedCount?: number | null; // Int
    success?: boolean | null; // Boolean
  }
  Education: { // root type
    campus: string; // String!
    course: string; // String!
    duration: string; // String!
    endDate: string; // String!
    gpa: string; // String!
    id: string; // ID!
    institute: string; // String!
    level: string; // String!
    startDate: string; // String!
  }
  EducationPage: { // root type
    id: string; // ID!
    name: string; // String!
    summary?: string | null; // String
    title?: string | null; // String
    userId: string; // ID!
  }
  EducationResponse: { // root type
    education?: NexusGenRootTypes['Education'] | null; // Education
    success?: boolean | null; // Boolean
  }
  Experience: { // root type
    id: string; // ID!
    name: string; // String!
    summary?: string | null; // String
    title?: string | null; // String
    userId: string; // ID!
  }
  Login: { // root type
    accessToken: string; // String!
    expiresAt: number; // Int!
    refreshToken?: string | null; // String
    user: NexusGenRootTypes['User']; // User!
  }
  LoginResponse: { // root type
    login?: NexusGenRootTypes['Login'] | null; // Login
    success?: boolean | null; // Boolean
  }
  Mutation: {};
  Page: { // root type
    id: string; // ID!
    name: string; // String!
    summary?: string | null; // String
    title?: string | null; // String
    userId: string; // ID!
  }
  PageResponse: { // root type
    page?: NexusGenRootTypes['Page'] | null; // Page
    success?: boolean | null; // Boolean
  }
  Project: { // root type
    deployed: string; // String!
    desc: string; // String!
    github: string; // String!
    id: string; // ID!
    images: string[]; // [String!]!
    label?: string | null; // String
    skills: string[]; // [String!]!
  }
  ProjectResponse: { // root type
    project?: NexusGenRootTypes['Project'] | null; // Project
    success?: boolean | null; // Boolean
  }
  Query: {};
  ResponseType: { // root type
    success?: boolean | null; // Boolean
  }
  SimpleUser: { // root type
    about: string; // String!
    address: string; // String!
    email: string; // String!
    facebook: string; // String!
    github: string; // String!
    id: string; // ID!
    linkedin: string; // String!
    name: string; // String!
    phone: string; // String!
    picture: string; // String!
    resume: string; // String!
  }
  Skill: { // root type
    id: string; // ID!
    label: string; // String!
    score: number; // Int!
    userId: string; // String!
  }
  SkillGroup: { // root type
    id: string; // ID!
    name: string; // String!
  }
  SkillGroupResponse: { // root type
    group?: NexusGenRootTypes['SkillGroup'] | null; // SkillGroup
    success?: boolean | null; // Boolean
  }
  SkillResponse: { // root type
    skill?: NexusGenRootTypes['Skill'] | null; // Skill
    success?: boolean | null; // Boolean
  }
  Skills: { // root type
    id: string; // ID!
    name: string; // String!
    summary?: string | null; // String
    title?: string | null; // String
    userId: string; // ID!
  }
  Summaries: { // root type
    about?: string | null; // String
    education?: string | null; // String
    projects?: string | null; // String
    resume?: string | null; // String
    skills?: string | null; // String
    work?: string | null; // String
  }
  User: { // root type
    about?: string | null; // String
    address?: string | null; // String
    email: string; // String!
    facebook?: string | null; // String
    github?: string | null; // String
    id: string; // ID!
    linkedin?: string | null; // String
    name: string; // String!
    phone?: string | null; // String
    picture?: string | null; // String
    resume?: string | null; // String
  }
  UserResponse: { // root type
    success?: boolean | null; // Boolean
    user?: NexusGenRootTypes['User'] | null; // User
  }
  Work: { // root type
    address: string; // String!
    company: string; // String!
    duration: string; // String!
    duties: string[]; // [String!]!
    icon?: string | null; // String
    id: string; // ID!
    role: string; // String!
    type: string; // String!
  }
  WorkResponse: { // root type
    success?: boolean | null; // Boolean
    work?: NexusGenRootTypes['Work'] | null; // Work
  }
}

export interface NexusGenInterfaces {
  PageInterface: NexusGenRootTypes['AboutPage'] | NexusGenRootTypes['EducationPage'] | NexusGenRootTypes['Experience'] | NexusGenRootTypes['Page'] | NexusGenRootTypes['Skills'];
  Response: NexusGenRootTypes['AboutArticleResponse'] | NexusGenRootTypes['AboutSectionResponse'] | NexusGenRootTypes['DeleteUserResponse'] | NexusGenRootTypes['EducationResponse'] | NexusGenRootTypes['LoginResponse'] | NexusGenRootTypes['PageResponse'] | NexusGenRootTypes['ProjectResponse'] | NexusGenRootTypes['ResponseType'] | NexusGenRootTypes['SkillGroupResponse'] | NexusGenRootTypes['SkillResponse'] | NexusGenRootTypes['UserResponse'] | NexusGenRootTypes['WorkResponse'];
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  AboutArticle: { // field return type
    content: string; // String!
    icon: string; // String!
    id: string; // ID!
    label: string; // String!
    sectionId: string; // ID!
  }
  AboutArticleResponse: { // field return type
    article: NexusGenRootTypes['AboutArticle'] | null; // AboutArticle
    success: boolean | null; // Boolean
  }
  AboutPage: { // field return type
    id: string; // ID!
    name: string; // String!
    sections: NexusGenRootTypes['AboutSection'][]; // [AboutSection!]!
    summary: string | null; // String
    title: string | null; // String
    userId: string; // ID!
  }
  AboutSection: { // field return type
    articles: NexusGenRootTypes['AboutArticle'][]; // [AboutArticle!]!
    id: string; // ID!
    name: string; // String!
  }
  AboutSectionResponse: { // field return type
    section: NexusGenRootTypes['AboutSection'] | null; // AboutSection
    success: boolean | null; // Boolean
  }
  DeleteUserResponse: { // field return type
    deletedCount: number | null; // Int
    success: boolean | null; // Boolean
  }
  Education: { // field return type
    campus: string; // String!
    course: string; // String!
    duration: string; // String!
    endDate: string; // String!
    gpa: string; // String!
    id: string; // ID!
    institute: string; // String!
    level: string; // String!
    startDate: string; // String!
  }
  EducationPage: { // field return type
    id: string; // ID!
    list: NexusGenRootTypes['Education'][]; // [Education!]!
    name: string; // String!
    summary: string | null; // String
    title: string | null; // String
    userId: string; // ID!
  }
  EducationResponse: { // field return type
    education: NexusGenRootTypes['Education'] | null; // Education
    success: boolean | null; // Boolean
  }
  Experience: { // field return type
    id: string; // ID!
    name: string; // String!
    projects: Array<NexusGenRootTypes['Project'] | null>; // [Project]!
    summary: string | null; // String
    title: string | null; // String
    userId: string; // ID!
    works: Array<NexusGenRootTypes['Work'] | null>; // [Work]!
  }
  Login: { // field return type
    accessToken: string; // String!
    expiresAt: number; // Int!
    refreshToken: string | null; // String
    user: NexusGenRootTypes['User']; // User!
  }
  LoginResponse: { // field return type
    login: NexusGenRootTypes['Login'] | null; // Login
    success: boolean | null; // Boolean
  }
  Mutation: { // field return type
    addEducation: NexusGenRootTypes['Response'] | null; // Response
    addOrUpdateAboutArticle: NexusGenRootTypes['AboutArticleResponse'] | null; // AboutArticleResponse
    addOrUpdateAboutSection: NexusGenRootTypes['AboutSectionResponse'] | null; // AboutSectionResponse
    addProject: NexusGenRootTypes['Response'] | null; // Response
    addWork: NexusGenRootTypes['Response'] | null; // Response
    createGroupSkill: NexusGenRootTypes['SkillResponse'] | null; // SkillResponse
    createOrUpdatePage: NexusGenRootTypes['Response'] | null; // Response
    createSkillGroup: NexusGenRootTypes['SkillGroupResponse'] | null; // SkillGroupResponse
    createUser: NexusGenRootTypes['Response'] | null; // Response
    login: NexusGenRootTypes['Response']; // Response!
    logout: NexusGenRootTypes['ResponseType']; // ResponseType!
    refereshToken: NexusGenRootTypes['Response']; // Response!
    updateEducation: NexusGenRootTypes['Response'] | null; // Response
    updateProject: NexusGenRootTypes['Response'] | null; // Response
    updateSkill: NexusGenRootTypes['SkillResponse'] | null; // SkillResponse
    updateSkillGroup: NexusGenRootTypes['SkillGroupResponse'] | null; // SkillGroupResponse
    updateUser: NexusGenRootTypes['Response'] | null; // Response
    updateWork: NexusGenRootTypes['Response'] | null; // Response
  }
  Page: { // field return type
    id: string; // ID!
    name: string; // String!
    summary: string | null; // String
    title: string | null; // String
    userId: string; // ID!
  }
  PageResponse: { // field return type
    page: NexusGenRootTypes['Page'] | null; // Page
    success: boolean | null; // Boolean
  }
  Project: { // field return type
    deployed: string; // String!
    desc: string; // String!
    github: string; // String!
    id: string; // ID!
    images: string[]; // [String!]!
    label: string | null; // String
    skills: string[]; // [String!]!
  }
  ProjectResponse: { // field return type
    project: NexusGenRootTypes['Project'] | null; // Project
    success: boolean | null; // Boolean
  }
  Query: { // field return type
    page: NexusGenRootTypes['PageInterface'] | null; // PageInterface
    user: NexusGenRootTypes['User'] | null; // User
    users: Array<NexusGenRootTypes['User'] | null>; // [User]!
  }
  ResponseType: { // field return type
    success: boolean | null; // Boolean
  }
  SimpleUser: { // field return type
    about: string; // String!
    address: string; // String!
    email: string; // String!
    facebook: string; // String!
    github: string; // String!
    id: string; // ID!
    linkedin: string; // String!
    name: string; // String!
    phone: string; // String!
    picture: string; // String!
    resume: string; // String!
  }
  Skill: { // field return type
    groups: NexusGenRootTypes['SkillGroup'][]; // [SkillGroup!]!
    id: string; // ID!
    label: string; // String!
    score: number; // Int!
    userId: string; // String!
  }
  SkillGroup: { // field return type
    id: string; // ID!
    name: string; // String!
    skills: NexusGenRootTypes['Skill'][]; // [Skill!]!
  }
  SkillGroupResponse: { // field return type
    group: NexusGenRootTypes['SkillGroup'] | null; // SkillGroup
    success: boolean | null; // Boolean
  }
  SkillResponse: { // field return type
    skill: NexusGenRootTypes['Skill'] | null; // Skill
    success: boolean | null; // Boolean
  }
  Skills: { // field return type
    groups: NexusGenRootTypes['SkillGroup'][]; // [SkillGroup!]!
    id: string; // ID!
    name: string; // String!
    summary: string | null; // String
    title: string | null; // String
    userId: string; // ID!
  }
  Summaries: { // field return type
    about: string | null; // String
    education: string | null; // String
    projects: string | null; // String
    resume: string | null; // String
    skills: string | null; // String
    work: string | null; // String
  }
  User: { // field return type
    about: string | null; // String
    address: string | null; // String
    email: string; // String!
    facebook: string | null; // String
    github: string | null; // String
    id: string; // ID!
    linkedin: string | null; // String
    name: string; // String!
    phone: string | null; // String
    picture: string | null; // String
    resume: string | null; // String
  }
  UserResponse: { // field return type
    success: boolean | null; // Boolean
    user: NexusGenRootTypes['User'] | null; // User
  }
  Work: { // field return type
    address: string; // String!
    company: string; // String!
    duration: string; // String!
    duties: string[]; // [String!]!
    icon: string | null; // String
    id: string; // ID!
    role: string; // String!
    type: string; // String!
  }
  WorkResponse: { // field return type
    success: boolean | null; // Boolean
    work: NexusGenRootTypes['Work'] | null; // Work
  }
  PageInterface: { // field return type
    id: string; // ID!
    name: string; // String!
    summary: string | null; // String
    title: string | null; // String
    userId: string; // ID!
  }
  Response: { // field return type
    success: boolean | null; // Boolean
  }
}

export interface NexusGenFieldTypeNames {
  AboutArticle: { // field return type name
    content: 'String'
    icon: 'String'
    id: 'ID'
    label: 'String'
    sectionId: 'ID'
  }
  AboutArticleResponse: { // field return type name
    article: 'AboutArticle'
    success: 'Boolean'
  }
  AboutPage: { // field return type name
    id: 'ID'
    name: 'String'
    sections: 'AboutSection'
    summary: 'String'
    title: 'String'
    userId: 'ID'
  }
  AboutSection: { // field return type name
    articles: 'AboutArticle'
    id: 'ID'
    name: 'String'
  }
  AboutSectionResponse: { // field return type name
    section: 'AboutSection'
    success: 'Boolean'
  }
  DeleteUserResponse: { // field return type name
    deletedCount: 'Int'
    success: 'Boolean'
  }
  Education: { // field return type name
    campus: 'String'
    course: 'String'
    duration: 'String'
    endDate: 'String'
    gpa: 'String'
    id: 'ID'
    institute: 'String'
    level: 'String'
    startDate: 'String'
  }
  EducationPage: { // field return type name
    id: 'ID'
    list: 'Education'
    name: 'String'
    summary: 'String'
    title: 'String'
    userId: 'ID'
  }
  EducationResponse: { // field return type name
    education: 'Education'
    success: 'Boolean'
  }
  Experience: { // field return type name
    id: 'ID'
    name: 'String'
    projects: 'Project'
    summary: 'String'
    title: 'String'
    userId: 'ID'
    works: 'Work'
  }
  Login: { // field return type name
    accessToken: 'String'
    expiresAt: 'Int'
    refreshToken: 'String'
    user: 'User'
  }
  LoginResponse: { // field return type name
    login: 'Login'
    success: 'Boolean'
  }
  Mutation: { // field return type name
    addEducation: 'Response'
    addOrUpdateAboutArticle: 'AboutArticleResponse'
    addOrUpdateAboutSection: 'AboutSectionResponse'
    addProject: 'Response'
    addWork: 'Response'
    createGroupSkill: 'SkillResponse'
    createOrUpdatePage: 'Response'
    createSkillGroup: 'SkillGroupResponse'
    createUser: 'Response'
    login: 'Response'
    logout: 'ResponseType'
    refereshToken: 'Response'
    updateEducation: 'Response'
    updateProject: 'Response'
    updateSkill: 'SkillResponse'
    updateSkillGroup: 'SkillGroupResponse'
    updateUser: 'Response'
    updateWork: 'Response'
  }
  Page: { // field return type name
    id: 'ID'
    name: 'String'
    summary: 'String'
    title: 'String'
    userId: 'ID'
  }
  PageResponse: { // field return type name
    page: 'Page'
    success: 'Boolean'
  }
  Project: { // field return type name
    deployed: 'String'
    desc: 'String'
    github: 'String'
    id: 'ID'
    images: 'String'
    label: 'String'
    skills: 'String'
  }
  ProjectResponse: { // field return type name
    project: 'Project'
    success: 'Boolean'
  }
  Query: { // field return type name
    page: 'PageInterface'
    user: 'User'
    users: 'User'
  }
  ResponseType: { // field return type name
    success: 'Boolean'
  }
  SimpleUser: { // field return type name
    about: 'String'
    address: 'String'
    email: 'String'
    facebook: 'String'
    github: 'String'
    id: 'ID'
    linkedin: 'String'
    name: 'String'
    phone: 'String'
    picture: 'String'
    resume: 'String'
  }
  Skill: { // field return type name
    groups: 'SkillGroup'
    id: 'ID'
    label: 'String'
    score: 'Int'
    userId: 'String'
  }
  SkillGroup: { // field return type name
    id: 'ID'
    name: 'String'
    skills: 'Skill'
  }
  SkillGroupResponse: { // field return type name
    group: 'SkillGroup'
    success: 'Boolean'
  }
  SkillResponse: { // field return type name
    skill: 'Skill'
    success: 'Boolean'
  }
  Skills: { // field return type name
    groups: 'SkillGroup'
    id: 'ID'
    name: 'String'
    summary: 'String'
    title: 'String'
    userId: 'ID'
  }
  Summaries: { // field return type name
    about: 'String'
    education: 'String'
    projects: 'String'
    resume: 'String'
    skills: 'String'
    work: 'String'
  }
  User: { // field return type name
    about: 'String'
    address: 'String'
    email: 'String'
    facebook: 'String'
    github: 'String'
    id: 'ID'
    linkedin: 'String'
    name: 'String'
    phone: 'String'
    picture: 'String'
    resume: 'String'
  }
  UserResponse: { // field return type name
    success: 'Boolean'
    user: 'User'
  }
  Work: { // field return type name
    address: 'String'
    company: 'String'
    duration: 'String'
    duties: 'String'
    icon: 'String'
    id: 'ID'
    role: 'String'
    type: 'String'
  }
  WorkResponse: { // field return type name
    success: 'Boolean'
    work: 'Work'
  }
  PageInterface: { // field return type name
    id: 'ID'
    name: 'String'
    summary: 'String'
    title: 'String'
    userId: 'ID'
  }
  Response: { // field return type name
    success: 'Boolean'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addEducation: { // args
      educationAttributes: NexusGenInputs['EducationInput']; // EducationInput!
    }
    addOrUpdateAboutArticle: { // args
      aboutArticle: NexusGenInputs['AboutArticleInput']; // AboutArticleInput!
      sectionId: string; // ID!
    }
    addOrUpdateAboutSection: { // args
      aboutSection: NexusGenInputs['AboutSectionInput']; // AboutSectionInput!
    }
    addProject: { // args
      projectAttributes: NexusGenInputs['ProjectInput']; // ProjectInput!
    }
    addWork: { // args
      workAttributes: NexusGenInputs['WorkInput']; // WorkInput!
    }
    createGroupSkill: { // args
      skill: NexusGenInputs['AddGroupSkillInput']; // AddGroupSkillInput!
    }
    createOrUpdatePage: { // args
      pageAttributes: NexusGenInputs['PageInput']; // PageInput!
      pageName: string; // String!
    }
    createSkillGroup: { // args
      group: NexusGenInputs['SkillGroupInput']; // SkillGroupInput!
    }
    createUser: { // args
      user?: NexusGenInputs['UserInput'] | null; // UserInput
    }
    login: { // args
      credentials: NexusGenInputs['LoginInput']; // LoginInput!
    }
    updateEducation: { // args
      educationAttributes: NexusGenInputs['UpdateEducationInput']; // UpdateEducationInput!
      educationId: string; // ID!
    }
    updateProject: { // args
      projectAttributes: NexusGenInputs['UpdateProjectInput']; // UpdateProjectInput!
      projectId: string; // ID!
    }
    updateSkill: { // args
      skill: NexusGenInputs['UpdateGroupSkillInput']; // UpdateGroupSkillInput!
      skillId: string; // ID!
    }
    updateSkillGroup: { // args
      group: NexusGenInputs['SkillGroupInput']; // SkillGroupInput!
      groupId: string; // ID!
    }
    updateUser: { // args
      updateAttributes: NexusGenInputs['UpdateUserInput']; // UpdateUserInput!
    }
    updateWork: { // args
      workAttributes: NexusGenInputs['UpdateWorkInput']; // UpdateWorkInput!
      workId: string; // ID!
    }
  }
  Query: {
    page: { // args
      pageName: string; // String!
      userId: string; // ID!
    }
    user: { // args
      emailOrId?: string | null; // ID
    }
    users: { // args
      search?: string | null; // String
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  PageInterface: "AboutPage" | "EducationPage" | "Experience" | "Page" | "Skills"
  Response: "AboutArticleResponse" | "AboutSectionResponse" | "DeleteUserResponse" | "EducationResponse" | "LoginResponse" | "PageResponse" | "ProjectResponse" | "ResponseType" | "SkillGroupResponse" | "SkillResponse" | "UserResponse" | "WorkResponse"
}

export interface NexusGenTypeInterfaces {
  AboutArticleResponse: "Response"
  AboutPage: "PageInterface"
  AboutSectionResponse: "Response"
  DeleteUserResponse: "Response"
  EducationPage: "PageInterface"
  EducationResponse: "Response"
  Experience: "PageInterface"
  LoginResponse: "Response"
  Page: "PageInterface"
  PageResponse: "Response"
  ProjectResponse: "Response"
  ResponseType: "Response"
  SkillGroupResponse: "Response"
  SkillResponse: "Response"
  Skills: "PageInterface"
  UserResponse: "Response"
  WorkResponse: "Response"
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "PageInterface" | "Response";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}